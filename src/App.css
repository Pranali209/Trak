body {
  font-family: "inter";
}

.btnShadow {
  box-shadow: 5px 4px 0px;
}

.fontClass {
  font-family: "Suranna", serif;
}

.fontClassFastHand {
  font-family: "Fasthand", sans-serif;
}
.fontClassFAQ{
  font-family: "Plus Jakarta Sans", serif;
}

.cycle-container {
  display: flex;
  justify-content: space-between; /* Adjusted for better spacing */
  align-items: center;
  position: relative;
  width: 80%; /* Set a width for the container */
  margin: auto; /* Center the container */
}

.stage {
  background-color: #f0f0f0;
  padding: 20px;
  border-radius: 10px;
  transition: transform 0.5s ease;
  width: 100px; /* Set a fixed width for the boxes */
  text-align: center; /* Center text inside the boxes */
}

@keyframes moveDots {
  from {
    stroke-dashoffset: 0;
  }
  to {
    stroke-dashoffset: 10; /* Adjust based on the length of the path */
  }
}

path {
  animation: moveDots 1s linear infinite;
}

.gradient-background {
  background: linear-gradient(to right, #D3FFF0 0%, #45CC8B 47%, #FFFFFF 95%);
  
}


.gradient-background2 {
  background: linear-gradient(to right, #FFFFFF 0%, #45BACC 47%, #9FEEC9 95%);
}

.gradient-background3 {
  background: linear-gradient(to right, #FFFFFF 0%, #45CC8B 47%, #D9EB7F 95%);
 
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

.hamburger-slide-in {
  animation: slideIn 0.8s forwards;
}



@keyframes moveLeft {
  from { transform: translateX(0); }
  to { transform: translateX(20%); }
}



@keyframes moveRight {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(-20%);
  }
}

.enable-animation-right {
  animation: moveRight 15s infinite alternate;
}

.enable-animation-left {
  animation: moveLeft 15s infinite alternate;
}

.boxShadow {
  box-shadow: 2px 4px 20px rgba(200, 200, 200, 1),
      -5px -5px 10px rgba(255, 255, 255, 1);
  /* Adjusted box-shadow for white background */
}

.fc-loader {
  display: inline;
}

.fc-loader_overlay-fill {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 99;
  background: #000;
  opacity: 0.7;
  pointer-events: none;
  animation: fadeOut 2s forwards;
}

@keyframes fadeOut {
  from {
      opacity: 0.7;
  }
  to {
      opacity: 0;
      visibility: hidden;
  }
}
/* ... (previous CSS) */


.smoke-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  z-index: 9999;
  pointer-events: none;
}

/* The overlay that holds the waves; it will be animated */
.smoke-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* Set transform-origin to bottom-right so it “unfolds” upward */
  transform-origin: bottom right;
  animation: verticalReveal 2s ease-in-out infinite;
}

@keyframes verticalReveal {
  0% {
    transform: translateY(100%) scaleY(0);
  }
  10% {
    transform: translateY(0) scaleY(1);
  }
  90% {
    transform: translateY(0) scaleY(1);
  }
  100% {
    transform: translateY(100%) scaleY(0);
  }
}

/* Wave layers inside the overlay */
.wave {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* A gentle vertical bobbing effect */
  animation: waveBob 2s ease-in-out infinite;
}

/* Stagger the wave bobbing for a more natural look */
.wave1 {
  animation-delay: 0s;
}
.wave2 {
  animation-delay: 1s;
}
.wave3 {
  animation-delay: 2s;
}

/* Vertical bobbing for the individual waves */
@keyframes waveBob {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}
